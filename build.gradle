plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id "me.shedaniel.unified-publishing" version "0.1.+" apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'
    apply plugin: 'me.shedaniel.unified-publishing'
    apply plugin: 'java'

    base {
        archivesName = "$rootProject.archives_name"
    }

    repositories {
        maven {
            name = "Infinituum Mod Resources"
            url = "https://raw.githubusercontent.com/Infinituum17/ModResources/main/maven/"
        }

        maven {
            url "https://cursemaven.com"
        }
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.officialMojangMappings()

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    if ((project.name == "fabric" || project.name == "forge") && project.version != "0.0.0") {
        unifiedPublishing {
            project {
                displayName = "Void Lib ${project.minecraft_version}-${project.name} - ${project.mod_version}"
                gameVersions = [project.minecraft_version]
                gameLoaders = [project.name]

                def clog = new File(project.getRootDir(), "changelog.md")

                if (clog.exists()) {
                    changelog = clog.getText()
                }

                version = project.version

                mainPublication remapJar

                var curseforgeToken = System.getenv("CURSEFORGE_TOKEN")
                if (curseforgeToken != null) {
                    curseforge {
                        token = curseforgeToken
                        id = "1097945"
                    }
                }

                var modrinthToken = System.getenv("MODRINTH_TOKEN")
                if (modrinthToken != null) {
                    modrinth {
                        token = modrinthToken
                        id = "Z7Z0JsCA"
                    }
                }
            }
        }
    }
}
